version: "{branch}.build.{build}"
skip_tags: true

branches:
        only:
                - develop

clone_folder:  c:\projects\sandbox

install:
        ps: |
                if (-not (Test-Path c:\build-cache)) {
                        mkdir c:\build-cache
                }
                $bname = 'php-sdk-' + $env:BIN_SDK_VER + '.zip'
                if (-not (Test-Path c:\build-cache\$bname)) {
                        Invoke-WebRequest "https://github.com/OSTC/php-sdk-binary-tools/archive/$bname" -OutFile "c:\build-cache\$bname"
                }
                $dname0 = 'php-sdk-binary-tools-php-sdk-' + $env:BIN_SDK_VER
                $dname1 = 'php-sdk-' + $env:BIN_SDK_VER
                if (-not (Test-Path c:\build-cache\$dname1)) {
                        7z x c:\build-cache\$bname -oc:\build-cache
                        move c:\build-cache\$dname0 c:\build-cache\$dname1
                }
                $arch_part = 'x64'
                if ('x86' -eq $env:ARCH) { $arch_part = 'x86' }
                $lname0 = 'pthreads-' + $env:PTHREADS_VER + "-" + $env:VC + "-" + $arch_part + '.zip'
                $lname1 = 'pthreads'
                if (-not (Test-Path c:\build-cache\$lname0)) {
                        $url = "https://windows.php.net/downloads/pecl/deps/" + $lname0
                        Invoke-WebRequest $url -OutFile "c:\build-cache\$lname0"
                }
                if (-not (Test-Path c:\build-cache\$lname1)) {
                        & 7z x c:\build-cache\$lname0 -oc:\build-cache\$lname1
                }


cache:
        c:\build-cache -> .appveyor.yml

environment:
        BIN_SDK_VER: 2.1.9
        PTHREADS_VER: 2.9.1
        matrix:
                - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
                  ARCH: x64
                  VC: vc14
                  PHP_VER: 7.1.24
                  TS: 1
                - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
                  ARCH: x86
                  VC: vc14
                  PHP_VER: 7.1.24
                  TS: 1
                - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
                  ARCH: x64
                  VC: vc15
                  PHP_VER: 7.2.12
                  TS: 1
                - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
                  ARCH: x86
                  VC: vc15
                  PHP_VER: 7.2.12
                  TS: 1
                - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
                  ARCH: x64
                  VC: vc15
                  PHP_VER: 7.3.1
                  TS: 1
                - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
                  ARCH: x86
                  VC: vc15
                  PHP_VER: 7.3.1
                  TS: 1

build_script:
        ps: |
                $ts_part = ''
                if ('0' -eq $env:TS) { $ts_part = '-nts' }
                $bname = 'php-devel-pack-' + $env:PHP_VER + $ts_part + '-Win32-' + $env:VC.toUpper() + '-' + $env:ARCH + '.zip'
                if (-not (Test-Path c:\build-cache\$bname)) {
                        Invoke-WebRequest "http://windows.php.net/downloads/releases/archives/$bname" -OutFile "c:\build-cache\$bname"
                        if (-not (Test-Path c:\build-cache\$bname)) {
                                Invoke-WebRequest "http://windows.php.net/downloads/releases/$bname" -OutFile "c:\build-cache\$bname"
                        }
                }
                $dname0 = 'php-' + $env:PHP_VER + '-devel-' + $env:VC.toUpper() + '-' + $env:ARCH
                $dname1 = 'php-' + $env:PHP_VER + $ts_part + '-devel-' + $env:VC.toUpper() + '-' + $env:ARCH
                if (-not (Test-Path c:\build-cache\$dname1)) {
                        7z x c:\build-cache\$bname -oc:\build-cache
                        move c:\build-cache\$dname0 c:\build-cache\$dname1
                }
                cd c:\projects\sandbox
                $env:PATH = 'c:\build-cache\' + $dname1 + ';' + $env:PATH
                #echo "@echo off" | Out-File -Encoding "ASCII" task.bat
                #echo "" | Out-File -Encoding "ASCII" -Append task.bat
                echo "" | Out-File -Encoding "ASCII" task.bat
                echo "call phpize 2>&1" | Out-File -Encoding "ASCII" -Append task.bat
                $conf_cmd = 'call configure --with-sandbox --with-extra-libs=c:\build-cache\pthreads\lib --with-extra-includes=c:\build-cache\pthreads\include --enable-debug-pack 2>&1'
                echo $conf_cmd | Out-File -Encoding "ASCII" -Append task.bat
                echo "nmake /nologo 2>&1" | Out-File -Encoding "ASCII" -Append task.bat
                echo "exit %errorlevel%" | Out-File -Encoding "ASCII" -Append task.bat
                $here = (Get-Item -Path "." -Verbose).FullName
                $runner = 'c:\build-cache\php-sdk-' + $env:BIN_SDK_VER + '\phpsdk' + '-' + $env:VC + '-' + $env:ARCH + '.bat'
                $task = $here + '\task.bat'
                & $runner -t $task

after_build:
        ps: |
                $ts_part = 'ts'
                if ('0' -eq $env:TS) { $ts_part = 'nts' }
                $zip_bname = 'php_sandbox-' + $env:APPVEYOR_REPO_COMMIT.substring(0, 8) + '-' + $env:PHP_VER.substring(0, 3) + '-' + $ts_part + '-' + $env:VC + '-' + $env:ARCH + '.zip'
                $dir = 'c:\projects\sandbox\';
                if ('x64' -eq $env:ARCH) { $dir = $dir + 'x64\' }
                $dir = $dir + 'Release'
                if ('1' -eq $env:TS) { $dir = $dir + '_TS' }
                & 7z a c:\$zip_bname $dir\php_sandbox.dll $dir\php_sandbox.pdb c:\projects\sandbox\LICENSE c:\build-cache\pthreads\bin\pthreadVC2.dll c:\build-cache\pthreads\bin\pthreadVC2.pdb c:\build-cache\COPYING.PTHREADS
                Push-AppveyorArtifact c:\$zip_bname

test_script:
        ps: |
                $ts_part = ''
                if ('0' -eq $env:TS) { $ts_part = '-nts' }
                $bname = 'php-' + $env:PHP_VER + $ts_part + '-Win32-' + $env:VC.toUpper() + '-' + $env:ARCH + '.zip'
                if (-not (Test-Path c:\build-cache\$bname)) {
                        Invoke-WebRequest "http://windows.php.net/downloads/releases/archives/$bname" -OutFile "c:\build-cache\$bname"
                        if (-not (Test-Path c:\build-cache\$bname)) {
                                Invoke-WebRequest "http://windows.php.net/downloads/releases/$bname" -OutFile "c:\build-cache\$bname"
                        }
                }
                $dname = 'php-' + $env:PHP_VER + $ts_part + '-' + $env:VC.toUpper() + '-' + $env:ARCH
                if (-not (Test-Path c:\build-cache\$dname)) {
                        7z x c:\build-cache\$bname -oc:\build-cache\$dname
                }
                cd c:\projects\sandbox
                echo "" | Out-File -Encoding "ASCII" task.bat
                echo "set REPORT_EXIT_STATUS=1" | Out-File -Encoding "ASCII" -Append task.bat
                $cmd = 'call configure --with-sandbox --with-extra-libs=c:\build-cache\pthreads\lib --with-extra-includes=c:\build-cache\pthreads\include --with-prefix=c:\build-cache\' + $dname + ' 2>&1'
                echo $cmd | Out-File -Encoding "ASCII" -Append task.bat
                echo 'set path=c:\build-cache\pthreads\bin;%path%' | Out-File -Encoding "ASCII" -Append task.bat
                echo 'nmake /nologo test TESTS="-q --show-diff --set-timeout 120" 2>&1' | Out-File -Encoding "ASCII" -Append task.bat
                echo "exit %errorlevel%" | Out-File -Encoding "ASCII" -Append task.bat
                $here = (Get-Item -Path "." -Verbose).FullName
                $runner = 'c:\build-cache\php-sdk-' + $env:BIN_SDK_VER + '\phpsdk' + '-' + $env:VC + '-' + $env:ARCH + '.bat'
                $task = $here + '\task.bat'
                & $runner -t $task

